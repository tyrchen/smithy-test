// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Delete a todo item.
pub struct DeleteTodo;

impl ::aws_smithy_http_server::operation::OperationShape for DeleteTodo {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#DeleteTodo",
            "com.example",
            "DeleteTodo",
        );

    type Input = crate::input::DeleteTodoInput;
    type Output = crate::output::DeleteTodoOutput;
    type Error = crate::error::DeleteTodoError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for DeleteTodo {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

/// Update a todo item.
pub struct UpdateTodo;

impl ::aws_smithy_http_server::operation::OperationShape for UpdateTodo {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#UpdateTodo",
            "com.example",
            "UpdateTodo",
        );

    type Input = crate::input::UpdateTodoInput;
    type Output = crate::output::UpdateTodoOutput;
    type Error = crate::error::UpdateTodoError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for UpdateTodo {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

/// Get a todo item.
pub struct GetTodo;

impl ::aws_smithy_http_server::operation::OperationShape for GetTodo {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#GetTodo",
            "com.example",
            "GetTodo",
        );

    type Input = crate::input::GetTodoInput;
    type Output = crate::output::GetTodoOutput;
    type Error = crate::error::GetTodoError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for GetTodo {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

/// Create a todo item.
pub struct CreateTodo;

impl ::aws_smithy_http_server::operation::OperationShape for CreateTodo {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#CreateTodo",
            "com.example",
            "CreateTodo",
        );

    type Input = crate::input::CreateTodoInput;
    type Output = crate::output::CreateTodoOutput;
    type Error = crate::error::CreateTodoError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for CreateTodo {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

/// list todo items.
pub struct ListTodos;

impl ::aws_smithy_http_server::operation::OperationShape for ListTodos {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#ListTodos",
            "com.example",
            "ListTodos",
        );

    type Input = crate::input::ListTodosInput;
    type Output = crate::output::ListTodosOutput;
    type Error = crate::error::ListTodosError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for ListTodos {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

/// Signin to get a token.
pub struct Signin;

impl ::aws_smithy_http_server::operation::OperationShape for Signin {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#Signin",
            "com.example",
            "Signin",
        );

    type Input = crate::input::SigninInput;
    type Output = crate::output::SigninOutput;
    type Error = crate::error::SigninError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for Signin {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}

#[allow(missing_docs)] // documentation missing in model
pub struct EchoMessage;

impl ::aws_smithy_http_server::operation::OperationShape for EchoMessage {
    const ID: ::aws_smithy_http_server::shape_id::ShapeId =
        ::aws_smithy_http_server::shape_id::ShapeId::new(
            "com.example#EchoMessage",
            "com.example",
            "EchoMessage",
        );

    type Input = crate::input::EchoMessageInput;
    type Output = crate::output::EchoMessageOutput;
    type Error = crate::error::EchoMessageError;
}

impl ::aws_smithy_http_server::instrumentation::sensitivity::Sensitivity for EchoMessage {
    type RequestFmt = ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::sensitivity::uri::MakeUri<
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
            ::aws_smithy_http_server::instrumentation::MakeIdentity,
        >,
    >;
    type ResponseFmt = ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt<
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
        ::aws_smithy_http_server::instrumentation::MakeIdentity,
    >;

    fn request_fmt() -> Self::RequestFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::RequestFmt::new()
    }

    fn response_fmt() -> Self::ResponseFmt {
        ::aws_smithy_http_server::instrumentation::sensitivity::ResponseFmt::new()
    }
}
