// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetTodoOutput {
    /// Contains a todo item.
    pub todo: crate::types::TodoItem,
}
impl GetTodoOutput {
    /// Contains a todo item.
    pub fn todo(&self) -> &crate::types::TodoItem {
        &self.todo
    }
}
impl GetTodoOutput {
    /// Creates a new builder-style object to manufacture [`GetTodoOutput`](crate::operation::get_todo::GetTodoOutput).
    pub fn builder() -> crate::operation::get_todo::builders::GetTodoOutputBuilder {
        crate::operation::get_todo::builders::GetTodoOutputBuilder::default()
    }
}

/// A builder for [`GetTodoOutput`](crate::operation::get_todo::GetTodoOutput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct GetTodoOutputBuilder {
    pub(crate) todo: ::std::option::Option<crate::types::TodoItem>,
}
impl GetTodoOutputBuilder {
    /// Contains a todo item.
    /// This field is required.
    pub fn todo(mut self, input: crate::types::TodoItem) -> Self {
        self.todo = ::std::option::Option::Some(input);
        self
    }
    /// Contains a todo item.
    pub fn set_todo(mut self, input: ::std::option::Option<crate::types::TodoItem>) -> Self {
        self.todo = input;
        self
    }
    /// Contains a todo item.
    pub fn get_todo(&self) -> &::std::option::Option<crate::types::TodoItem> {
        &self.todo
    }
    /// Consumes the builder and constructs a [`GetTodoOutput`](crate::operation::get_todo::GetTodoOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`todo`](crate::operation::get_todo::builders::GetTodoOutputBuilder::todo)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::get_todo::GetTodoOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::get_todo::GetTodoOutput {
            todo: self.todo.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "todo",
                    "todo was not specified but it is required when building GetTodoOutput",
                )
            })?,
        })
    }
}
