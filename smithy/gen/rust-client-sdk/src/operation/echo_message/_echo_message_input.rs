// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EchoMessageInput {
    #[allow(missing_docs)] // documentation missing in model
    pub message: ::std::option::Option<::std::string::String>,
}
impl EchoMessageInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl EchoMessageInput {
    /// Creates a new builder-style object to manufacture [`EchoMessageInput`](crate::operation::echo_message::EchoMessageInput).
    pub fn builder() -> crate::operation::echo_message::builders::EchoMessageInputBuilder {
        crate::operation::echo_message::builders::EchoMessageInputBuilder::default()
    }
}

/// A builder for [`EchoMessageInput`](crate::operation::echo_message::EchoMessageInput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct EchoMessageInputBuilder {
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl EchoMessageInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`EchoMessageInput`](crate::operation::echo_message::EchoMessageInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::echo_message::EchoMessageInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::echo_message::EchoMessageInput {
            message: self.message,
        })
    }
}
