// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListTodosOutput {
    /// Contains a list of todo items.
    pub todos: ::std::vec::Vec<crate::types::TodoItem>,
    #[allow(missing_docs)] // documentation missing in model
    pub next_token: ::std::option::Option<::std::string::String>,
}
impl ListTodosOutput {
    /// Contains a list of todo items.
    pub fn todos(&self) -> &[crate::types::TodoItem] {
        use std::ops::Deref;
        self.todos.deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ListTodosOutput {
    /// Creates a new builder-style object to manufacture [`ListTodosOutput`](crate::operation::list_todos::ListTodosOutput).
    pub fn builder() -> crate::operation::list_todos::builders::ListTodosOutputBuilder {
        crate::operation::list_todos::builders::ListTodosOutputBuilder::default()
    }
}

/// A builder for [`ListTodosOutput`](crate::operation::list_todos::ListTodosOutput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct ListTodosOutputBuilder {
    pub(crate) todos: ::std::option::Option<::std::vec::Vec<crate::types::TodoItem>>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
}
impl ListTodosOutputBuilder {
    /// Appends an item to `todos`.
    ///
    /// To override the contents of this collection use [`set_todos`](Self::set_todos).
    ///
    /// Contains a list of todo items.
    pub fn todos(mut self, input: crate::types::TodoItem) -> Self {
        let mut v = self.todos.unwrap_or_default();
        v.push(input);
        self.todos = ::std::option::Option::Some(v);
        self
    }
    /// Contains a list of todo items.
    pub fn set_todos(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::TodoItem>>,
    ) -> Self {
        self.todos = input;
        self
    }
    /// Contains a list of todo items.
    pub fn get_todos(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::TodoItem>> {
        &self.todos
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    /// Consumes the builder and constructs a [`ListTodosOutput`](crate::operation::list_todos::ListTodosOutput).
    /// This method will fail if any of the following fields are not set:
    /// - [`todos`](crate::operation::list_todos::builders::ListTodosOutputBuilder::todos)
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::list_todos::ListTodosOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::list_todos::ListTodosOutput {
            todos: self.todos.ok_or_else(|| {
                ::aws_smithy_types::error::operation::BuildError::missing_field(
                    "todos",
                    "todos was not specified but it is required when building ListTodosOutput",
                )
            })?,
            next_token: self.next_token,
        })
    }
}
