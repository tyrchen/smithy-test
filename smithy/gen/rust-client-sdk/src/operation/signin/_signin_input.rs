// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SigninInput {
    #[allow(missing_docs)] // documentation missing in model
    pub username: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub password: ::std::option::Option<::std::string::String>,
}
impl SigninInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn username(&self) -> ::std::option::Option<&str> {
        self.username.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn password(&self) -> ::std::option::Option<&str> {
        self.password.as_deref()
    }
}
impl SigninInput {
    /// Creates a new builder-style object to manufacture [`SigninInput`](crate::operation::signin::SigninInput).
    pub fn builder() -> crate::operation::signin::builders::SigninInputBuilder {
        crate::operation::signin::builders::SigninInputBuilder::default()
    }
}

/// A builder for [`SigninInput`](crate::operation::signin::SigninInput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct SigninInputBuilder {
    pub(crate) username: ::std::option::Option<::std::string::String>,
    pub(crate) password: ::std::option::Option<::std::string::String>,
}
impl SigninInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn username(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.username = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_username(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.username = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_username(&self) -> &::std::option::Option<::std::string::String> {
        &self.username
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn password(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.password = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_password(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.password = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_password(&self) -> &::std::option::Option<::std::string::String> {
        &self.password
    }
    /// Consumes the builder and constructs a [`SigninInput`](crate::operation::signin::SigninInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::signin::SigninInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(crate::operation::signin::SigninInput {
            username: self.username,
            password: self.password,
        })
    }
}
